---
Archaeology:
  services:
    assemble_glyphs:
      description: Turns glyphs into rare ancient items.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Archaeology Ministry.
          name: building_id
          type: string
        - description: An array reference containing an ordered list of up to four glyph ids.
          name: ids
          type: string
      returns: |-
        {
            "status" : { ... },
            "item_name" : "Volcano"
         }
    get_glyphs:
      description: Returns a list of glyphs that have been found by this archaeology ministry.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Archaeology Ministry.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "glyphs" : [
                {
                    "id" : "id-goes-here",
                    "type" : "bauxite",
                },
                ...
            ]
         }
    get_ores_available_for_processing:
      description: Returns a list of ore names that the user has enough of to process for glyphs.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Archaeology Ministry.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ore" : {
                "bauxite" : 39949,
                "rutile" : 19393
                }
         }
    search_for_glyph:
      description: 'Searches through ore looking for glyphs left behind by the ancient race. Takes 10,000 of one type of ore to search. Returns view.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Archaeology Ministry.
          name: building_id
          type: string
        - description: 'One of the 20 types of ore. Choose from: rutile, chromite, chalcopyrite, galena, gold, uraninite, bauxite, goethite, halite, gypsum, trona, kerogen, methane, anthracite, sulfur, zircon, monazite, fluorite, beryl, magnetite'
          name: ore_type
          type: string
    subsidize_search:
      description: Will spend 2 essentia to complete the current glyph search immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Archaeology Ministry.
          name: building_id
          type: string
      throws:
        - 1011
Capitol:
  services:
    rename_empire:
      description: Spend some essentia to rename your empire.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: The new name of your empire.
          name: name
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view:
      description: 'Same as view in Buildings except:'
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "rename_empire_cost" : 29,
         }
Development:
  description: 'The higher the development ministry, the more builds you can put in your build queue.'
  services:
    subsidize_build_queue:
      description: Allows a player to instantly finish any buildings in their build queue. The cost is returned by the view method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The id of the development ministry.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "essentia_spent" : 8
         }
    view:
      description: This method is extended to include details about what's in your build queue.
      parameters:
        - name: session
        - name: building_id
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "build_queue" : [
                {
                    "building_id" : "building-id-goes-here",
                    "name" : "Planetary Commmand",
                    "to_level" : 9,
                    "seconds_remaining" : 537,
                    "x" : 0,
                    "y" : 0
                },
                {
                    "building_id" : "building-id-goes-here",
                    "name" : "Wheat Farm",
                    "to_level" : 15,
                    "seconds_remaining" : 9748,
                    "x" : -1,
                    "y" : 4
                }
            ],
            "subsidy_cost" : 8 # the essentia cost to subsidize the build queue
         }
DistributionCenter:
  services:
    get_stored_resources:
      description: Returns a list of the resources you have stored to make it easier to identify what you want to store.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "cargo_space_used_each" : 1,
            "resources" : {
                    "water" : 14000,
                    "waste" : 393,
                    "bauxite" : 47,
                    "cheese" : 1193,
                    ...
            }
         }
    release_reserve:
      description: Returns the resources held in reserve back to the planet.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the distribution center.
          name: building_id
          type: string
    reserve:
      description: Reserves resources so they don't get automatically spent. Resources will be held until the timer expires or manually released. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the distribution center.
          name: building_id
          type: string
        - description: An array of objects of resources you wish to reserve.
          name: resources
          type: string
      returns: |-
        [
             {
                 "type" : "apples",
                 "quanity" : 2000
             },
             {
                 "type" : "chromite",
                 "quantity" : 5000
             }
         ]
      throws:
        - 1009
        - 1010
        - 1011
    view:
      description: 'Same as view in Buildings except:'
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "building" : { ... },
            "reserve" : {
                "seconds_remaining" : 0, # time until reserved resources will automatically be released
                "can" : 1,
                "max_reserve_duration" : "7200", # max length resources can be kept in reserve
                "max_reserve_size" : 100000, # max amount of resources that can be reserved
                "resources" : [         # resources currently in reserve
                    {
                        "type" : "water",
                        "quanity" : 2000
                    }
                    {
                        "type" : "apples",
                        "quanity" : 2000
                    }
                ]
            }
         }
Embassy:
  services:
    accept_invite:
      description: Accept an invitation. Returns the same output as get_alliance_status.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of an invitation. See get_my_invites for details.
          name: invite_id
          type: string
        - description: Optional. A personalized message that will be sent to the alliance leader with your acceptance.
          name: message
          type: string
    assign_alliance_leader:
      description: Sets a new empire to lead the alliance. Can only be called by the current alliance leader. Returns the same thing as get_alliance_status.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of an empire that will lead the alliance going forward. The empire must already be a member of the alliance.
          name: new_leader_id
          type: string
    create_alliance:
      description: Create a new alliance. Returns the same output as get_alliance_status.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: 'A unique name for this alliance. Must be between 3 and 30 characters, cannot contain profanity or restricted characters.'
          name: name
          type: string
    dissolve_alliance:
      description: Can only be called by alliance leader. Disbands and existing alliance.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    donate_to_stash:
      description: Returns view_stash
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: 'NOTE: Cannot donate waste.'
          name: donation
          type: string
      returns: |-
        {
            "water" : 4500,
            "bread" : 5000
         }
    exchange_with_stash:
      description: Returns view_stash
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: 'NOTE: Cannot donate waste.'
          name: donation
          type: string
        - description: 'NOTE: The total sum, must add up to the sum of the donation, but can be in different concentrations.'
          name: request
          type: string
      returns: |-
        {
            "energy" : 2000,
            "meal" : 7500
         }
    expel_member:
      description: Forcibly removes a member from an alliance. Returns the same thing as get_alliance_status. Can only be called by the alliance leader.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of the empire to remove from the alliance.
          name: empire_id
          type: string
        - description: An optional message about why you're removing them from the alliance. Cannot contain restricted characters or profanity.
          name: message
          type: string
    get_alliance_status:
      description: Returns everything about an alliance that members should know.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "alliance" : {
                "id" : "id-goes-here",
                "name" : "United Federation of Planets",
                "members" : [
                    {
                        "empire_id" : "id goes here",
                        "name" : "Klingons",
                    }
                    ...
                ],
                "leader_id" : "id goes here",
                "forum_uri" : "http://forum.example.com/",
                "description" : "This is public information.",
                "announcements" : "This is private information.",
                "date_created" : "01 31 2010 13:09:05 +0600"
             }
         }
    get_my_invites:
      description: Returns a list of invitations that have been offered to this empire.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "invites" : [
                {
                    "id" : "id-goes-here",
                    "name" : "United Federation of Planets",
                    "alliance_id" : "id-goes-here"
                },
                ...
            ]
         }
    get_pending_invites:
      description: 'Can only be called by the alliance leader. Returns a list of invitations that have been sent out, but that have not been accepted, rejected, or withdrawn.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "invites" : [
                {
                    "id" : "id-goes-here",
                    "name" : "The Borg",
                    "empire_id" : "id-goes-here"
                },
                ...
            ]
         }
    leave_alliance:
      description: A member of an alliance revokes their own membership.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: An optional message about why you're leaving the alliance. Cannot contain restricted characters or profanity.
          name: message
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    reject_invite:
      description: Delete an invitation.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of an invitation. See get_my_invites for details.
          name: invite_id
          type: string
        - description: Optional. A personalized message that will be sent to the alliance leader along with your rejection.
          name: message
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    send_invite:
      description: Can only be called by alliance leader. Invite an empire to an alliance.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of an empire you'd like to invite to an alliance. See "search_empires" in Empire to look up empire ids.
          name: invitee_id
          type: string
        - description: Optional. A personalized welcome message that will be included in the invitation.
          name: message
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    update_alliance:
      description: Updates the properties of an alliance. Returns the same thing as get_alliance_status. Can only be called by the alliance leader.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: A hash reference of alliance properties. None of which can contain profanity or restricted characters. You can update any or all of these properties at the same time.
          name: params
          type: string
    view:
      description: Same as view in Buildings except:We add an alliance_status block if this empire is in an alliance. It contains the same information as get_alliance_status
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "building" : { ... },
            "alliance_status" : { get_alliance_status() }
         }
    view_stash:
      description: 'Returns a list of what is in the current stash:'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "stash" : {                # what is stored in the stash
                "gold" : 4500,
                "water" : 1000,
                "apple" : 8
            },
            "stored" : {               # what is stored in planetary storage
                "energy" : 40000,
                "algae" : 43000,
                "water" : 19000,
                "bauxite" : 1110,
                "galena" : 33120
            },
            "max_exchange_size" : 30000,
            "exchanges_remaining_today" : 1
         }
    withdraw_invite:
      description: Can only be called by alliance leader. Delete an invitation.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the embassy.
          name: building_id
          type: string
        - description: The unique id of an invitation. See get_pending_invites for details.
          name: invite_id
          type: string
        - description: Optional. A personalized message that will be sent to the user about why their invitation has been withdrawn.
          name: message
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
EnergyReserve:
  description: Energy Reserves increase the amount of energy you can store on your planet.
  services:
    dump:
      description: Converts energy into waste.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: An integer representing the amount to dump.
          name: amount
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
Entertainment:
  services:
    duck_quack:
      description: Returns a string that must retain its formatting (whitespace and carriage returns) when displayed to the user.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
    get_lottery_voting_options:
      description: 'This is the starting point to a voting lottery system. The user can vote on a site once and only once per day and each vote enters him/her into a lottery. At the end of the day a lottery ticket will be drawn, and a winner will be chosen to receive 10 essentia. Every vote is equal, but the more votes you have the greater your odds of winning.Returns a list of sites that the user can vote on.NOTE: The URLs returned in the url parameter need to be opened into a new browser window so that the user can go vote on a remote site.Each url is usable only once every 24 hours. The server keeps track of this, but the client must remove the URL from the list after the user has clicked on it so they know not to click again.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the entertainment district.
          name: building_id
          type: string
      returns: |-
        {
            "options" : [
                {
                    "name" : "Some Site",
                    "url" : "http://www.somesite.com/vote?id=44"
                },
                ...
            ],
            "status" : { ... }
         }
    view:
      description: 'Same as view in Buildings except:'
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "ducks_quacked" : 493
         }
FoodReserve:
  description: The food reserve stores the excess food you produce.
  services:
    dump:
      description: Converts food into waste.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: 'Choose a type of food convert into waste. (apple, corn, burger, etc)'
          name: type
          type: string
        - description: An integer representing the amount to dump.
          name: amount
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view:
      description: This method is extended to include details about what kind of food is stored.
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "food_stored" : {
                "apple" : 0,
                "bread" : 47,
                "algae" : 301,
                ...
            }
         }
GeneticsLab:
  services:
    prepare_experiment:
      description: Returns everything you need to set up an experiment.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the genetics lab.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "grafts" : [
                {
                    "spy" : {
                        "id" : "id-goes-here",
                        "name" : "James Bond",
                        ...
                    },
                    "species" : {
                        "min_orbit" : 3,
                        "max_orbit" : 4,
                        "science_affinity" : 4,
                        ...
                    },
                    graftable_affinities : [
                        "min_orbit",
                        "management_affinity"
                    ]
                },
                ...
            ],
            "survival_odds" : 31,
            "graft_odds" : 11,
            "essentia_cost" : 2,
            "can_experiment" : 1
         }
    run_experiment:
      description: Allows you to experiment on prisoners attempting to graft their genetic traits onto your own species.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the genetics lab.
          name: building_id
          type: string
        - name: spy_id
        - name: affinity
      returns: |-
        {
            "experiment" : {
                "graft" : 1,        # did the graft succeed
                "survive" : 0,      # did the prisoner survive
                "message" : "The graft was a success, and the prisoner did not survive the experiment."
            },
            # the rest is the same as prepare_experiment 
         }
HallsOfVrbansk:
  services:
    get_upgradable_buildings:
      description: Returns a list of buildings that can be upgraded by the Halls of Vrbansk.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Halls of Vrbansk.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "buildings" : [
                {
                    "name" : "Oracle of Anid",
                    "id" : "id-goes-here",
                    "x" : -3,
                    "y" : 2,
                    "image" : "oracleanid1",
                    "level" : 1,
                    "url" : "/oracleofanid"
                },
                ...
            ]
         }
    sacrifice_to_upgrade:
      description: 'Sacrifices a number of the Halls of Vrbansk to upgrade a building.NOTE: In all likelyhood the Halls of Vrbansk that the player is looking at when they call this method will be destroyed. The building will return a status, but then you should close whatever screen you have open for it and refresh the planet surface. The needs_surface_refresh flag will be set in the body status on the return. You should wait for the return to close the building though, in case of an exception.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Halls of Vrbansk.
          name: building_id
          type: string
        - description: The unique id of the building you wish to upgrade.
          name: upgrade_building_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
Intelligence:
  description: The Intelligence Ministry is where you build and control your spies.
  services:
    assign_spy:
      description: 'Set a spy on a new task.The mission block allows you to give immediate feedback to the player. The result types that can be sent back are:The reason provides a message in sentence form about why a spy won or lost a mission. This message is related to the success or failure, not any outcome that results from that success or failure.The message_id refers to a message in the Inbox. Providing this ID allows you to pop open the inbox to a specific message to display to the user. The message will tell you what the outcome of the mission is if any. Not all missions will provide a message_id.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of your Intelligence Ministry.
          name: building_id
          type: string
        - description: The unique id of the spy you wish to assign.
          name: spy_id
          type: string
        - description: 'NOTE: You can do bad things to allies using these assignments.'
          name: assignment
          type: string
      returns: |-
        {
            "status" : { ... },
            "mission" : {
                "result" : "Failure",
                "message_id" : "id-goes-here",
                "reason" : "I'm under heavy fire over here!"
            },
            "spy" : {
                "id" : "id-goes-here",
                "name" : "Jason Bourne",
                "assignment" : "Idle",
                "possible_assignments" : [
                    {
                        "task" : "Idle",
                        "recovery" : 0,
                        "skill" : "none"
                    },
                    {
                        "task" : "Counter Espionage",
                        "recovery" : 0,
                        "skill" : "*"
                    },
                    {
                        "task" : "Security Sweep",
                        "recovery" : 14400,        # in seconds
                        "skill" : "intel"
                    },
                    ...
                ],
                "level" : 9,
                "politics" : 0,                         # experience in handling happiness
                "mayhem" : 20,                          # experience in handling missions involving murder and destruction
                "theft" : 40,                           # experience in handling missions involving stealing items
                "intel" : 33,                           # experience in handling missions involving information and spies
                "offense_rating" : 570,
                "defense_rating" : 150,
                "assigned_to" : {
                    "body_id" : "id-goes-here",
                    "name" : "Earth",
                },
                "is_available" : 1, # can be reassigned
                "available_on" : "01 31 2010 13:09:05 +0600", # if can't be reassigned, this is when will be available
                "started_assignment" : "01 31 2010 13:09:05 +0600",
                "seconds_remaining" : 45
            }
         }
    burn_spy:
      description: Allows you to eliminate one of your spies from your payroll.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of your Intelligence Ministry.
          name: building_id
          type: string
        - description: The unique id of the spy you wish to burn.
          name: spy_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    name_spy:
      description: Set the name of the spy.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the intelligence building.
          name: building_id
          type: string
        - description: The unique id of the spy you wish to train.
          name: spy_id
          type: string
        - description: "The name you'd like to set for the spy. The name cannot contain @, <, #, &, ; or profanity, and must be at least 1 character long."
          name: name
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1002
        - 1005
        - 1013
    subsidize_training:
      description: Will spend 1 essentia per spy to complete the training of all spies immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Intelligence Ministry.
          name: building_id
          type: string
      throws:
        - 1011
    train_spy:
      description: Allows you to train more spies.The only reason not_trained might be over 0 is if you specify training more spies than you have resources to spend.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of your Intelligence Ministry.
          name: building_id
          type: string
        - description: An integer between 1 and 5. Defaults to 1.
          name: quantity
          type: string
      returns: |-
        {
            "status" : { ... },
            "trained" : 3,
            "not_trained" : 2
         }
      throws:
        - 1009
        - 1013
    view:
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "building" : { ... },
            "spies" : {
                "maximum" : 5,
                "current" : 1,
                "in_training" : 1,
                "training_costs" : {
                    "food" : 100,
                    "water" : 120,
                    "energy" : 20,
                    "ore" : 5,
                    "waste" : 10,
                    "time" : 60,
                }
            },
         }
    view_spies:
      description: 'Returns the list of spies you have on your roster.Take a look at the assign_spy method below for assignment descriptions.NOTE: If a spy is already recovering from a particular assignment, then possible_assignments will return only that one assignment and the recovery time will be however much recovery time is remaining.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of your Intelligence Ministry.
          name: building_id
          type: string
        - description: Defaults to 1. An integer representing which page to view. Shows 25 spies per page.
          name: page_number
          type: string
      returns: |-
        {
            "status" : { ... },
            "spies" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Jason Bourne",
                    "assignment" : "Idle",
                    "possible_assignments" : [
                        {
                            "task" : "Idle",
                            "recovery" : 0,
                            "skill" : "none"
                        },
                        {
                            "task" : "Counter Espionage",
                            "recovery" : 0,
                            "skill" : "*"
                        },
                        {
                            "task" : "Security Sweep",
                            "recovery" : 14400,        # in seconds
                            "skill" : "intel"
                        },
                        ...
                    ],
                    "level" : 9,
                    "politics" : 0,                         # experience in handling happiness
                    "mayhem" : 20,                          # experience in handling missions involving murder and destruction
                    "theft" : 40,                           # experience in handling missions involving stealing items
                    "intel" : 33,                           # experience in handling missions involving information and spies
                    "offense_rating" : 570,
                    "defense_rating" : 150,
                    "assigned_to" : {
                        "body_id" : "id-goes-here",
                        "name" : "Earth",
                        "x" : 40,
                        "y" : -71
                    },
                    "is_available" : 1, # can be reassigned
                    "available_on" : "01 31 2010 13:09:05 +0600", # if can't be reassigned, this is when will be available
                    "started_assignment" : "01 31 2010 13:09:05 +0600",
                    "seconds_remaining" : 45,
                                "mission_count" : {
                                        "offensive" : 149,
                                        "defensive" : 149
                                }
                },
                ...
            ],
            "spy_count" : 12
         }
LibraryOfJith:
  services:
    research_species:
      description: Returns a list of species stats for any species in the game.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of an empire you'd like to know more about. See "find" in Empire to turn a name into an id.
          name: empire_id
          type: string
      returns: |-
        {
            "species" : {
               "name" : "Human",
               "description" : "The descendants of Earth.",
               "min_orbit" : 3,
               "max_orbit" : 3,
               "manufacturing_affinity" : 4,
               "deception_affinity" : 4,
               "research_affinity" : 4,
               "management_affinity" : 4,
               "farming_affinity" : 4,
               "mining_affinity" : 4,
               "science_affinity" : 4,
               "environmental_affinity" : 4,
               "political_affinity" : 4,
               "trade_affinity" : 4,
               "growth_affinity" : 4
            },
            "status" : { ... }
         }
MercenariesGuild:
  services:
    accept_from_market:
      description: Accept a trade offer from the list of available trades. See view_market.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1016
    add_to_market:
      description: Queues a trade for others to see.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mercenaries guild.
          name: building_id
          type: string
        - description: The unique id of the spy that you want to trade. See the get_spies method for a list of your spies.
          name: spy_id
          type: string
        - description: An integer representing the amount of essentia you are asking for in this trade. Must be between 1 and 99.
          name: ask
          type: string
        - description: Optional. The specific id of a ship you want to use for this trade. See get_trade_ships for details.
          name: ship_id
          type: string
      returns: |-
        {
            "trade_id" : "id-goes-here",
            "status" : { ... },
         }
    get_spies:
      description: Returns a list of spies that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "spies" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Jack Bauer",
                    "level" : "9"
                },
                ...
            ],
            "cargo_space_used_each" : 350,
            "status" : { ... }
         }
    get_trade_ships:
      description: Returns a list of the ships that could be used to do a trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the trade ministry.
          name: building_id
          type: string
        - description: The unique id of the body you'll be shipping to. Optional. If included it will calculate the estimated travel time of the ships to this body.
          name: target_body_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ships" : [
                {
                   "id" : "id-goes-here",
                   "type" : "spy_pod",
                   "name" : "Spy Pod 5",
                   "estimated_travel_time" : 3600, # in seconds, one way
                   ...
                },
                ...
            ]
         }
    report_abuse:
      description: Report a trade that you think is abusing the trade system.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view_market:
      description: Displays a list of trades available at the present time.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: Optional. An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 9 spy named Jack Bauer (Mercenary Transport) Offense: 875, Defense: 875, Intel: 2, Mayhem: 0, Politics: 0, Theft: 0, Mission Count Offensive: 0 Defensive: 2)",
                    ],
                    "body" : {
                        "id" : "id-goes-here"         # use with get_trade_ships() to determine travel time
                    },
                    "empire" : {
                        "id" : "id-goes-here",
                        "name" : "Earthlings"
                    }
                },
                ...
            ],
            "trade_count" : 1047,
            "page_number" : 1,
            "status" : { ... }
         }
    view_my_market:
      description: Displays a list of trades the current user has posted.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 9 spy named Jack Bauer (Mercenary Transport) Offense: 875, Defense: 875, Intel: 2, Mayhem: 0, Politics: 0, Theft: 0, Mission Count Offensive: 0 Defensive: 2)",
                    ]
                },
                ...
            ],
            "trade_count" : 17,
            "page_number" : 1,
            "status" : { ... }
         }
    withdraw_from_market:
      description: Remove a trade that you have offered and collect the items up for trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
MiningMinistry:
  description: The Mining Ministry controls mining platform ships for harvesting the resources of asteroids.
  services:
    abandon_platform:
      description: Close down an existing mining platform.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mining ministry.
          name: building_id
          type: string
        - description: The unique id of the platform you wish to abandon.
          name: platform_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1002
    add_cargo_ship_to_fleet:
      description: Take a cargo ship from the space port and add it to the mining fleet.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mining ministry.
          name: building_id
          type: string
        - description: The unique id of the ship you want to add to the fleet.
          name: ship_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1009
    remove_cargo_ship_from_fleet:
      description: Tell one of the cargo ships in the mining fleet to come home and park at the space port.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mining ministry.
          name: building_id
          type: string
        - description: The unique id of the ship you want to add.
          name: ship_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1009
    view_platforms:
      description: "Returns a list of the mining platforms currently controlled by this ministry.The shipping_capacity number is a percent which gives you an indication of your production vs shipping efficiency. If it's a -1 then you have no ships servicing the platforms. If it's at 0, then it means you have ships but no production. If it's 1 to 99 then you've got more shipping capacity than production. If it's at 100 then everything is in harmony. And if it's greater than 100 then you need to add ships because you're producing more than your ships can handle."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mining ministry.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "max_platforms" : 1,
            "platforms" : [
                {
                    "id" : "id-goes-here",
                    "asteroid" : {
                        "id" : "id-goes-here",
                        "name" : "Kuiper",
                        "x" : 0,
                        "y" : -444,
                        "image" : "a1-5",
                        ...
                    },
                    "rutile_hour" : 10,
                    "chromite_hour" : 10,
                    "chalcopyrite_hour" : 10,
                    "galena_hour" : 10,
                    "gold_hour" : 10,
                    "uraninite_hour" : 10,
                    "bauxite_hour" : 10,
                    "goethite_hour" : 10,
                    "halite_hour" : 10,
                    "gypsum_hour" : 10,
                    "trona_hour" : 10,
                    "kerogen_hour" : 10,
                    "methane_hour" : 10,
                    "anthracite_hour" : 10,
                    "sulfur_hour" : 10,
                    "zircon_hour" : 10,
                    "monazite_hour" : 10,
                    "fluorite_hour" : 10,
                    "beryl_hour" : 10,
                    "magnetite_hour" : 10,  
                    "shipping_capacity" : 51 
                },
                ...
            ]
         }
    view_ships:
      description: 'Shows you the ships that are working in the mining fleet, and available to work in the mining fleet.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the mining ministry.
          name: building_id
          type: string
      returns: |-
        {
            "ships" : [
                {
                    "name" : "CS4",
                    "id" : "id-goes-here",
                    "task" : "Mining",
                    "speed" : 350,
                    "hold_size" : 5600
                },
                ...
            ],
            "status" : { ... }
         }
MissionCommand:
  services:
    complete_mission:
      description: 'Completes a mission. Will be rejected if you do not have all the objectives met. If you have met the objectives, then the rewards will be distributed to you.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the mission command building.
          name: building_id
          type: string
        - description: The unique id of the mission you'd like to complete.
          name: mission_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    get_missions:
      description: "Returns a list of missions that you are eligible to complete in this zone.NOTE: This is not the complete list of missions in the zone. You cannot complete missions you've already completed, nor can you complete missions that are registered as being below your university level."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the mission command building.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "missions" : [
                {
                    "id" : "id-goes-here",
                    "max_university_level" : 12,
                    "date_posted" : "01 31 2010 13:09:05 +0600",
                    "name" : "The Big Mission",
                    "description" : "Do the big thing and make it go.",
                    "objectives" : [
                      "1500 apple",
                      "Kill a spy",
                      "Destroy a ship"
                    ],
                    "rewards" : [
                        "1 essentia"
                    ]
                },
                ...
            ]
         }
    skip_mission:
      description: Skips a mission. This mission won't show up on the list of missions for this user for 30 days.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the mission command building.
          name: building_id
          type: string
        - description: The unique id of the mission you'd like to skip.
          name: mission_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
Network19:
  description: "Network 19 is the news network covering the Expanse. Here you can learn all kinds of things about what's happening around you, without even leaving your planet. Every two levels you'll receive news from additional zones around you, up to 7 total zones."
  services:
    restrict_coverage:
      description: You can enact or disband a policy to restrict what Network 19 covers about your planet. Restricting coverage does make your citizens unhappy.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this Network 19 Affiliate.
          name: building_id
          type: string
        - description: 'A boolean indicating whether or not you have enacted a policy to restrict coverage. 1 to restrict, 0 to not restrict.'
          name: onoff
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1009
    view:
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "building" : { ... },
            "restrict_coverage" : 1 # see restrict_coverage()
         }
    view_news:
      description: Get the top 100 headlines from your region of space (called a zone). It also returns a list of RSS feeds that can be used outside the game to see the same news in a given zone.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Network 19 Affiliate.
          name: building_id
          type: string
      returns: |-
        {
            "news" : [
                {
                    "headline" : "HCorp founded a new colony on Rigel 4.",
                    "date" : "01 31 2010 13:09:05 +0600"
                },
                ...
            ],
            "feeds" : {
                "0|0|0" : 'http://feeds.game.lacunaexpanse.com/78d5e7b2-b8d7-317c-b244-3f774264be57.rss'
            },
            "status" : { ... }
         }
Observatory:
  description: The observatory controls stellar probes.
  services:
    abandon_probe:
      description: 'The probe is deactivated, and allowed to burn up in the star.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the observatory.
          name: building_id
          type: string
        - description: The unique id of the star the probe is attached to.
          name: star_id
          type: string
      returns: |-
        {
                "status" : { ... }
         }
      throws:
        - 1002
        - 1010
    get_probed_stars:
      description: Returns a list of the stars that have been probed by this planet.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the observatory.
          name: building_id
          type: string
        - name: page_number
      returns: |-
        {
                "status" : { ... },
            "stars" : [
                "id" : "id-goes-here",
                        "color" : "yellow",
                        "name" : "Sol",
                        "x" : 17,
                        "y" : 4,
                        "z" : -3,
                        "bodies" : [
                    { See get_status() in Body },
                    ...
                ]
                ],
            "star_count" : 37
         }
OracleOfAnid:
  services:
    get_star:
      description: "Retrieves info on a single star. Works like \"get_star\" in Map except that you can see the bodies even if there is no probe there. Therefore the same displays that you would have for the star and these bodies in the star map should work from this interface. Send a scow to a star, attack a player, send a mining platform, etc.There is a range to the Oracle based upon it's level. A 10 map unit radius per level. A 1009 exception will be thrown if you request a star that its outside that range.NOTE: Use \"search_stars\" in Map to look up the id of a star by name."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Oracle.
          name: building_id
          type: string
        - description: The unique id of the star.
          name: star_id
          type: string
      returns: |-
        { 
            "star" : {
                "name"          : "Sol",
                "color"         : "yellow",
                "x"             : -41,
                "y"             : 27,
                "bodies"        : [     
                    {
                        same data as get_status() on /body
                    },
                    ...
                ]
            }    
            "status" : { ... }
         }
OreStorage:
  description: Ore Storage Tanks increase the amount of ore you can store on your planet.
  services:
    dump:
      description: Converts ore into waste.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: 'Choose a type of ore convert into waste. (gold, bauxite, galena, etc)'
          name: type
          type: string
        - description: An integer representing the amount to dump.
          name: amount
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view:
      description: This method is extended to include details about what kinds of ore are stored.
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "ore_stored" : {
                "bauxite" : 0,
                "gold" : 47,
                "trona" : 301,
                ...
            }
         }
Park:
  description: 'Parks are highly useful because they generate happiness for your planet. Just being able to use the park makes your citizens happy, but you can also throw parties for them, which will generate lots of happiness at the end of the party.'
  services:
    subsidize_party:
      description: Will spend 2 essentia to complete the current party immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Park.
          name: building_id
          type: string
      throws:
        - 1011
    throw_a_party:
      description: "Initiates a party. It will cost you 10,000 food, and the party will last for a day. For 10,000 food you'll get 3,000 happiness. For each type of food available in quantities of 500 or more, you'll get a multiplier added to that. So if you have 4 types of food, you'll get 12,000 happiness. In addition, you get a 0.3 to your multiplier for each level of park that you have. Therefore a level 10 park is the same as adding three extra foods to your party!Returns view."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the park.
          name: building_id
          type: string
      throws:
        - 1002
        - 1006
        - 1010
        - 1011
    view:
      description: This method is changed from the default because it adds a party element to the output.If there's an ongoing party you'll be able to see how long it has left. And if there's not a party it will let you know whether you have the resources to throw one.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the park.
          name: building_id
          type: string
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "party" : {
                "seconds_remaining" : 397,
                "happiness" : 10000,
                "can_throw" : 0
            }
         }
PlanetaryCommand:
  description: 'The Planetary Command Center (PCC), or just Command, is the hub of your empire on a planet. It gives you the resources and storage you need to get a foothold on a planet.'
  services:
    view:
      description: Command extends the view method to include a planet section.
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "next_colony_cost" : 750000,        # the amount of happiness required to settle your next colony
            "planet" : {
                "id" : "id-goes-here",
                "x" : -4,
                "y" : 10,
                "z" : 6,
                "star_id" : "id-goes-here",
                "orbit" : 3,
                "type" : "habitable planet",
                "name" : "Earth",
                "image" : "p13",
                "size" : 67,
                "water" : 900,
                "ore" : {
                    "gold" : 3399,
                    "bauxite" : 4000,
                    ...
                },
                "building_count" : 7,
                "population" : 470000,
                "happiness" : 3939,
                "happiness_hour" : 25,
                "food_stored" : 33329,
                "food_capacity" : 40000,
                "food_hour" : 229,
                "energy_stored" : 39931,
                "energy_capacity" : 43000,
                "energy_hour" : 391,
                "ore_hour" 284,
                "ore_capacity" 35000,
                "ore_stored" 1901,
                "waste_hour" : 933,
                "waste_stored" : 9933,
                "waste_capacity" : 13000,
                "water_stored" : 9929,
                "water_hour" : 295,
                "water_capacity" : 51050
            }
         }
    view_plans:
      description: "Returns a list of all the plans you've collected through various means.If the level is 1, and there is an extra_build_level, that means that the building will be built up to 1 plus the extra build level when complete. So in the example above, it would be a level 6 directly after being built."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the PCC.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "plans" : [
                {
                   "name" : "Malcud Fungus Farm",
                   "level" : 1,
                   "extra_build_level" : 5
                },
                ...
            ]
         }
Security:
  description: Captured spies are detained at the security ministry.
  services:
    execute_prisoner:
      description: "You may choose to execute a prisoner rather than letting him serve his sentence and be released. However, that will cost you 10,000 times the prisoner's level in happiness from your planet. So a level 11 prisoner would cost you 110,000 happiness."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the security ministry.
          name: building_id
          type: string
        - description: The unique id of a prisoner you have captured. See view_prisoners for details.
          name: prisoner_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    release_prisoner:
      description: You may choose to release a prisoner by calling this method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the security ministry.
          name: building_id
          type: string
        - description: The unique id of a prisoner you have captured. See view_prisoners for details.
          name: prisoner_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view_foreign_spies:
      description: 'Displays a list of the spies that are on your planet, and have a level lower than your security ministry.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the security ministry.
          name: building_id
          type: string
        - description: Defaults to 1. Each page contains 25 spies.
          name: page_number
          type: string
      returns: |-
        {
            "status" : { ... },
            "spies" : [
                {
                    "name" : "James Bond",
                    "level" : 11,
                    "next_mission" : "01 31 2010 13:09:05 +0600"
                },
                ...
            ]
         }
    view_prisoners:
      description: Displays a list of the spies that have been captured.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the security ministry.
          name: building_id
          type: string
        - description: Defaults to 1. Each page contains 25 spies.
          name: page_number
          type: string
      returns: |-
        {
            "status" : { ... },
            "prisoners" : [
                {
                    "id" : "id-goes-here",
                    "name" : "James Bond",
                    "level" : "20",
                    "sentence_expires" : "01 31 2010 13:09:05 +0600"
                },
                ...
            ]
         }
Shipyard:
  description: "The shipyard is where you build ships. However, you'll need other building types to enable the different kinds of ships that are available. The higher the level of the shipyard, faster your ships will be built."
  services:
    build_ship:
      description: Adds a ship to the build queue. Returns the same thing as view_build_queue().
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the shipyard.
          name: building_id
          type: string
        - description: A ship type. Get from get_buildable.
          name: type
          type: string
    get_buildable:
      description: "Returns a list of buildable ships and their costs, and if they're not buildable, gives a reason why not in the form of an exception."
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the shipyard.
          name: building_id
          type: string
        - description: 'An optional tag to limit the list of available ships to something shorter. If no tag is specified, then all ships will be displayed.'
          name: tag
          type: string
      returns: |-
        {
            "buildable" : {
                "probe" : {
                    "can" : 1,             # can it be built or not
                    "reason" : null,       # if it can't an array ref will be here with the exception for why not
                    "cost" : {
                        "seconds" : 900,
                        "food" : 1100,
                        "water" : 1000,
                        "energy" : 1200,
                        "ore" : 1200,
                        "waste" : 100,
                    },
                    attributes : {
                        "speed" : 1000,    # 100 roughly equals 1 star in 1 hour
                        "hold_size" : 1000,
                        "max_occupants" : 2,
                        "combat" : 0,
                        "stealth" : 1500
                    }
                },
                ...
            },
            "docks_available" : 7,         # you can only build ships up to the number of docks you have available
            "status" : { ... },
         }
    subsidize_build_queue:
      description: Will spend 1 essentia per ship to complete the current build queue immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Shipyard.
          name: building_id
          type: string
      throws:
        - 1011
    view_build_queue:
      description: Retrieves what is already being built at this shipyard.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this shipyard.
          name: building_id
          type: string
        - name: page_number
      returns: |-
        {
             "status" : { ... },
             "number_of_ships_building" : 30,
             "cost_to_subsidize" : 30,
             "ships_building" : [
                 {
                     "type" : "spy_pod",
                     "date_completed" : "01 31 2010 13:09:05 +0600"
                 }
                 ...
             ]
         }
SpacePort:
  description: The Space Port is where all the ships you build will be docked once they have been built from the Shipyard. You can dock twice as many ships as the level of the Space Port.
  services:
    fetch_spies:
      description: 'Sends a specified ship to fetch specified spies from on_body_id, and bring them back to to_body_id. See also prepare_fetch_spies.NOTE: If the spies are not Idle when the ship arrives, they will not be picked up.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the planet that the spies are on.
          name: on_body_id
          type: string
        - description: 'The unique id of the planet that the spies should be sent to, and the ship will be dispatched from.'
          name: to_body_id
          type: string
        - description: The unique id of the ship to use to fetch the spies.
          name: ship_id
          type: string
        - description: An array reference of spy ids to send.
          name: spy_ids
          type: string
      returns: |-
        {
             "ship" : {
                "id" : "id-goes-here",
                "name" : "CS4",
                "hold_size" : 1100,
                "speed" : 400,
                "type" : "cargo_ship",
                "date_arrives" : "01 31 2010 13:09:05 +0600",
                ...
             },
             "status" : { ... }
         }
    get_ships_for:
      description: 'Provides a list of incoming ships and ships that are available to send to a specific target. Use with send_ship.The unavailable block tells you about ships that are docked, but are for some reason not available to be used. The orbiting block will be returned only if the target is body and tells you about fighters that are defending and can be recalled. The mining_platforms block will be returned only if the target is an asteroid that has platforms on it.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the planet that should send the ship.
          name: from_body_id
          type: string
        - description: A hash reference that can contain one of five items to identify a star or body.
          name: target
          object:
            body_id:
              description: The unique id of the body.
            body_name:
              description: "A string with the body's name. Case insensitive, but will throw an exception for misspelling."
            star_id:
              description: The unique id of the star.
            star_name:
              description: "A string with the star's name. Case insensitive, but will throw an exception for misspelling."
            x | y:
              description: 'A set of x,y coordinates to locate the star or body.'
          type: object
      returns: |-
        { "body_name" : "Earth" }
         
         { "body_id" : "id-goes-here" }
         
         { "star_name" : "Sol" }
         
         { "star_id" : "id-goes-here" }
         
         { "x" : 4, "y" : -3 }
    name_ship:
      description: Set the name of a ship.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the space port.
          name: building_id
          type: string
        - description: The unique id of the ship you want to name.
          name: ship_id
          type: string
        - description: The name you want to give the ship. 1 to 30 characters. No profanity. No funky characters.
          name: name
          type: string
    prepare_fetch_spies:
      description: Gathers the information needed to call the fetch_spies method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the planet that the spies are on.
          name: on_body_id
          type: string
        - description: 'The unique id of the planet that the spies should be sent to, and the ship will be dispatched from.'
          name: to_body_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "CS4",
                    "hold_size" : 1100,
                    "speed" : 400,
                    "type" : "cargo_ship",
                    "estimated_travel_time" : 3600, # in seconds
                    ...
                },
                ...
            ],
            "spies" : [
                {
                    "id" : "id-goes-here",
                    "level" : 12,
                    "name" : "Jack Bauer",
                    "assigned_to" : {
                       "body_id" : "id-goes-here",
                       "name" : "Earth"
                    },
                    ...
                },
                ...
            ]
         }
    prepare_send_spies:
      description: 'Gathers the information needed to call the send_spies method.NOTE: Only a certain number of spies can fit in each type of ship. Spy Pods can hold 1. Spy Shuttles can hold 4. And ships with a cargo hold can hold 1 for every 350 units of hold size.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the planet that the spies are on and ship will be dispatched from.
          name: on_body_id
          type: string
        - description: The unique id of the planet that the spies should be sent to.
          name: to_body_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "CS4",
                    "hold_size" : 1100,
                    "speed" : 400,
                    "type" : "cargo_ship",
                    "estimated_travel_time" : 3600, # in seconds
                    ...
                },
                ...
            ],
            "spies" : [
                {
                    "id" : "id-goes-here",
                    "level" : 12,
                    "name" : "Jack Bauer",
                    "assigned_to" : {
                       "body_id" : "id-goes-here",
                       "name" : "Earth"
                    },
                    ...
                },
                ...
            ]
         }
    recall_all:
      description: Recalls all of this planet's ships that are orbiting (task of 'Defend' or 'Orbiting') to their spaceport of origin. This behaves like recall_ship in all other aspects.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the space port.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "F13",
                    "type_human" : "Fighter",
                    "type" : "fighter",
                    "task" : "Travelling",
                    "speed" : "2000",
                    "stealth" : "0",
                    "hold_size" : "0",
                    "date_started" : "01 31 2010 13:09:05 +0600",
                    "date_available" : "02 01 2010 10:08:33 +0600",
                    "date_arrives" : "02 01 2010 10:08:33 +0600",
                    "from" : {
                       "id" : "id-goes-here",
                       "type" : "body",
                       "name" : "Earth"
                    },
                    "to" : {
                       "id" : "id-goes-here",
                       "type" : "star",
                       "name" : "Sol"
                    }
                },
                ...
            ],
         }
      throws:
        - 1002
        - 1010
    recall_ship:
      description: Recalls an orbiting ship (task of 'Defend' or 'Orbiting') to the body of origin.Recalling an orbiting Spy Shuttle also fetches as many idle spies as will fit from the planet it was orbiting.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the space port.
          name: building_id
          type: string
        - description: The unique id of a ship to recall.
          name: ship_id
          type: string
      returns: |-
        {
             "ship" : {
                "id" : "id-goes-here",
                "name" : "SS4",
                "hold_size" : 0,
                "speed" : 3400,
                "type" : "spy_shuttle",
                "date_arrives" : "01 31 2010 13:09:05 +0600",
                ...
             },
             "status" : { ... }
         }
      throws:
        - 1002
        - 1010
        - 1013
    scuttle_ship:
      description: Destroy a ship that you no longer need. It must be docked to scuttle it.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id for the space port.
          name: building_id
          type: string
        - description: The unique id of the ship you want to destroy.
          name: ship_id
          type: string
    send_fleet:
      description: Sends a fleet of ships to a specified body or star. Use with get_ships_for.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - name: ship_ids
        - description: A hash reference that can contain one of five items to identify a star or body. Same as send_ship.
          name: target
          type: string
      returns: |-
        {
            "status" : { ... },
                "fleet" : [
                        "ship" : {
                                "id" : "id-goes-here",
                                "name" : "P13",
                                "type_human" : "Probe",
                                "type" : "probe",
                                "task" : "Travelling",
                                "speed" : "1200",
                                "stealth" : "0",
                                "hold_size" : "0",
                                "date_started" : "01 31 2010 13:09:05 +0600",
                                "date_available" : "02 01 2010 10:08:33 +0600",
                                "date_arrives" : "02 01 2010 10:08:33 +0600",
                                "from" : {
                                   "id" : "id-goes-here",
                                   "type" : "body",
                                   "name" : "Earth"
                                },
                                "to" : {
                                   "id" : "id-goes-here",
                                   "type" : "star",
                                   "name" : "Sol"
                                }
                        },
                        ...
            ]
         }
      throws:
        - 1002
        - 1009
        - 1010
        - 1016
    send_ship:
      description: Sends a ship to a specified body or star. Use with get_ships_for.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of a ship to send.
          name: ship_id
          type: string
        - description: A hash reference that can contain one of five items to identify a star or body.
          name: target
          object:
            body_id:
              description: The unique id of the body.
            body_name:
              description: "A string with the body's name. Case insensitive, but will throw an exception for misspelling."
            star_id:
              description: The unique id of the star.
            star_name:
              description: "A string with the star's name. Case insensitive, but will throw an exception for misspelling."
            x | y:
              description: 'A set of x,y coordinates to locate the star or body.'
          type: object
      returns: |-
        { "body_name" : "Earth" }
         
         { "body_id" : "id-goes-here" }
         
         { "star_name" : "Sol" }
         
         { "star_id" : "id-goes-here" }
         
         { "x" : 4, "y" : -3 }
    send_spies:
      description: Sends one or more of spies to a planet using a selected ship. See also prepare_send_spies.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the planet that should send the ship and that has the spies.
          name: on_body_id
          type: string
        - description: The unique id of the planet that the spies should be sent to.
          name: to_body_id
          type: string
        - description: The unique id of the ship to send.
          name: ship_id
          type: string
        - description: An array reference of spy ids to send.
          name: spy_ids
          type: string
      returns: |-
        {
             "ship" : {
                "id" : "id-goes-here",
                "name" : "CS4",
                "hold_size" : 1100,
                "speed" : 400,
                "type" : "cargo_ship",
                "date_arrives" : "01 31 2010 13:09:05 +0600",
                ...
             },
            "spies_sent" : ["id-goes-here","id-goes-here","id-goes-here"],     # should be identical to "spy_ids"
            "spies_not_sent" : ["id-goes-here","id-goes-here","id-goes-here"],  # should only contain something if you're cheating, or a spy dies/turns between RPC calls
            "status" : { ... }
         }
    view:
      description: This method is extended to include a list of docked ships.
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "max_ships" : 8,
            "docks_available" : 4,
            "docked_ships" : {
                "probe" : 3,
                "cargo_ship" : 0,
                "spy_pod" : 1,
                "colony_ship" : 0,
                "terraforming_platform_ship": 0,
                "gas_giant_settlement_platform_ship" : 0,
                "mining_platform_ship" : 0,
                "smuggler_ship" : 1,
                "space_station" : 0,
            }
         }
    view_all_ships:
      description: Shows you all your ships whatever they are doing.Travelling ships will have a from and to block. Defending fighters will have a from and orbiting block.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space port.
          name: building_id
          type: string
        - description: 'Optional. A hash reference that contains the paging criteria. Valid paging option keys include page_number, items_per page and no_paging.'
          name: paging
          object:
            items_per_page:
              description: Optional. An integer representing the number of items per page to return. Defaults to 25.
            no_paging:
              description: 'Optional. If set to 1, all other paging options are ignored and all results will be retured.'
            page_number:
              description: Optional. An integer representing the page of ships to return. Defaults to 1.
          type: object
        - description: 'Optional. A hash reference that contains the filter criteria. Valid filter option keys include task, type and tag.'
          name: filter
          object:
            tag:
              description: 'Note: Tags will be converted to types prior to filtering and any types that were passed will be replaced.'
            task:
              description: 'Optional. An array reference or string with the task(s) to filter on. Valid tasks include Docked, Building, Mining, Travelling, and Defend.'
            type:
              description: Optional. An array reference or string with the type(s) to filter on. Valid types are the existing ship types.
          type: object
        - description: "Optional. A string with the column to sort on. Defaults to 'type'. (A second sort column, 'name', is added to your chosen sort column.) Valid columns to sort on include: combat, name, speed, stealth, task, and type."
          name: sort
          type: string
      returns: |-
        { "task" : "Defend" }
        
          { "tag" : "Mining" }
        
          { "task" : "Docked", "type" : "freighter" }
        
          { "tag" : [ "Colonization", "Exploration" ], "task" : "Travelling" }
    view_foreign_ships:
      description: "Shows you all the foreign ships that are incoming. However, the list is filtered by the stealth of the ship vs the level of the SpacePort. The formula is:If your SpacePort exceeds the Ship's Stealth, then you'll see it incoming. Otherwise you won't.The from block is only included if"
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space port.
          name: building_id
          type: string
        - description: Defaults to page 1. Shows 25 at a time.
          name: page_number
          type: string
      returns: |-
        {
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "CS3",
                    "type_human" : "Cargo Ship",
                    "type" : "cargo_ship",
                    "date_arrives" : "02 01 2010 10:08:33 +0600",
                    "from" : {
                        "id" : "id-goes-here",
                        "name" : "Earth",
                        "empire" : {
                            "id" : "id-goes-here",
                            "name" : "Earthlings"
                        }
                    }
                },
                ...
            ],
            "number_of_ships" : 13,
            "status" : { ... }
         }
    view_ships_orbiting:
      description: "Shows you all the foreign ships that are orbiting this planet. However, the list is filtered by the stealth of the ship vs the level of the SpacePort. The formula is:If your SpacePort exceeds the Ship's Stealth, then you'll see it orbiting. Otherwise you won't.The from block is only included if"
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space port.
          name: building_id
          type: string
        - description: Defaults to page 1. Shows 25 at a time.
          name: page_number
          type: string
      returns: |-
        {
            "ships" : [
               {
                   "id" : "id-goes-here",
                   "name" : "SS3",
                   "type" : "spy_shuttle",
                   "type_human" : "Spy Shuttle",
                   "date_arrived" : "02 01 2010 10:08:33 +0600",
                   "from" : {
                       "id" : "id-goes-here",
                       "name" : "Mars",
                       "empire" : {
                           "id" : "id-goes-here",
                           "name" : "Martians"
                       }
                   }
               },
               {
                   "id" : "id-goes-here",
                   "name" : "F3",
                   "type" : "fighter",
                   "type_human" : "Fighter",
                   "from" : {
                       "id" : "id-goes-here",
                       "name" : "Earth",
                       "empire" : {
                           "id" : "id-goes-here",
                           "name" : "Earthlings"
                       }
                   }
               },
                ...
            ],
            "number_of_ships" : 13,
            "status" : { ... }
         }
    view_ships_travelling:
      description: 'Returns a list of the ships that are travelling to or from this planet.NOTE: All inbound/outbound ships are shown regardless of which space port they will eventually land at.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space port.
          name: building_id
          type: string
        - description: Defaults to 1. An integer representing which page of ships travelling to view. Each page shows 25 ships.
          name: page_number
          type: string
      returns: |-
        {
            "status" : { ... },
            "number_of_ships_travelling" : 30,
            "ships_travelling" : [
               {
                   "id" : "id-goes-here",
                   "type" : "probe",
                    "type_human" : "Probe",
                   "date_arrives" : "01 31 2010 13:09:05 +0600",
                   "from" : {
                       "id" : "id-goes-here",
                       "type" : "body",
                       "name" : "Earth",
                   },
                   "to" : {
                       "id" : "id-goes-here",
                       "type" : "star",
                       "name" : "Sol",
                   }
               },
               ...
            ]
         }
SpaceStationLab:
  services:
    make_plan:
      description: Starts the plan creation process.Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space station lab.
          name: building_id
          type: string
        - description: 'The key from the hash returned by the view method in make_plan > types. For example, ibs for "Interstellar Broadcast Station".'
          name: type
          type: string
        - description: An integer between 1 and 30. The level from the array returned by the view method in make_plan > level_costs.
          name: level
          type: string
    subsidize_plan:
      description: Will spend essentia equal to the subsidy_cost returned by the view method to complete the current plan immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space station lab.
          name: building_id
          type: string
      throws:
        - 1011
    view:
      description: This method is changed from the default because it adds a make_plan element to the output.If there is a plan being made then the making element will be present.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the space station lab.
          name: building_id
          type: string
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "make_plan" : {
                "types" : [
                    {
                        "type" : "ibs",
                        "name" : "Interstellar Broadcast Station",
                        "image" : "ibs",
                        "url" : "/ibs"
                    },
                    ...
                ],
                "level_costs" : [
                    {
                       level    => 1,
                       food     => 10000,
                       ore      => 10000,
                       water    => 10000,
                       energy   => 10000,
                       waste    => 2500,
                       time     => 1200
                    },
                    ...
                ],
                "subsidy_cost" : 2,
                "making" : "Interstellar Broadcast Station (3+0)"
            }
         }
SubspaceSupplyDepot:
  services:
    complete_build_queue:
      description: Trade seconds for build queue time.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: A building id.
          name: building_id
          type: string
      returns: |-
        {
            "building" : {
                "work" : {
                    "seconds_remaining" : 99,
                    "start" : "01 31 2010 13:09:05 +0600",
                    "end" : "01 31 2010 13:09:05 +0600"
                }
            },
            "status" : { ... }   
         }
    transmit_energy:
      description: Convert 3600 seconds into 3600 energy.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: A building id.
          name: building_id
          type: string
      returns: |-
        {
            "building" : {
                "work" : {
                    "seconds_remaining" : 99,
                    "start" : "01 31 2010 13:09:05 +0600",
                    "end" : "01 31 2010 13:09:05 +0600"
                }
            },
            "status" : { ... }   
         }
    transmit_food:
      description: Convert 3600 seconds into 3600 food.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: A building id.
          name: building_id
          type: string
      returns: |-
        {
            "building" : {
                "work" : {
                    "seconds_remaining" : 99,
                    "start" : "01 31 2010 13:09:05 +0600",
                    "end" : "01 31 2010 13:09:05 +0600"
                }
            },
            "status" : { ... }   
         }
    transmit_ore:
      description: Convert 3600 seconds into 3600 ore.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: A building id.
          name: building_id
          type: string
      returns: |-
        {
            "building" : {
                "work" : {
                    "seconds_remaining" : 99,
                    "start" : "01 31 2010 13:09:05 +0600",
                    "end" : "01 31 2010 13:09:05 +0600"
                }
            },
            "status" : { ... }   
         }
    transmit_water:
      description: Convert 3600 seconds into 3600 water.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: A building id.
          name: building_id
          type: string
      returns: |-
        {
            "building" : {
                "work" : {
                    "seconds_remaining" : 99,
                    "start" : "01 31 2010 13:09:05 +0600",
                    "end" : "01 31 2010 13:09:05 +0600"
                }
            },
            "status" : { ... }   
         }
TempleOfTheDrajilites:
  services:
    list_planets:
      description: Provides the list of the planets around a given star.
      parameters:
        - name: session_id
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: Optionally pass in a star id. Defaults to the star that the building is built on. See "search_stars" in Map to see how you can get a star id by name.
          name: star_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "planets" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Earth"
                },
                ...
            ]
         }
    view_planet:
      description: Returns a surface map identical in format to the one returned as an Inbox attachment.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: "The unique id of a planet you want to view. Note that this must be a planet id and not a body id. It won't work for an asteroid for example. Also, the planet must be in range. You get 10 star map units per level of the Temple."
          name: planet_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "map" : {
                "surface_image" : "surface-p12",
                "buildings" : [
                    {
                        "x" : 1,
                        "y" : -2,
                        "image" : "rockyoutcrop1"
                    },
                    ...
                ]
            }
         }
ThemePark:
  services:
    operate:
      description: 'Initiates operation of the Theme Park. You need at least 1,000 of each of 5 food types to start the Theme Park for one hour. Once the Theme Park starts it will start using a lot more resources, but it will also start outputting large amounts of happiness. The amount of happiness generated is directly proportional to the number of food types used to start the Theme Park, and is also expontentially increased with each level of the Theme Park.While the Theme Park is operating, you can call this method again to spend more food and increase the duration of operation of the Theme Park. However, you must be able to spend at least as much food as you did when this method was last called.Returns view.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the theme park.
          name: building_id
          type: string
      throws:
        - 1002
        - 1006
        - 1010
        - 1011
    view:
      description: This method is changed from the default because it adds a themepark element to the output.Consult the work block to see how long the Theme Park will remain in operation.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the park.
          name: building_id
          type: string
      returns: |-
        {
            "building" : { ... },
            "status" : { ... },
            "themepark" : {
                "food_type_count" : 12,
                "can_operate" : 0,
                "reason" : [1011, "This Theme Park was started with 12 types of food so you need at least 12 types of food to continue its operation."]
            }
         }
Trade:
  services:
    accept_from_market:
      description: Accept a trade offer from the list of available trades. See view_market.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1016
    add_to_market:
      description: Queues a trade for others to see.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the trade ministry.
          name: building_id
          type: string
        - description: 'An array reference of hash references of items you wish to trade. There are five types of items that can be traded via this mechanism. They are resources, glyphs, plans, prisoners, and ships.'
          name: offer
          type: string
        - description: An integer representing the amount of essentia you are asking for in this trade. Must be between 1 and 99.
          name: ask
          type: string
        - description: A hash reference of options to modify the trade.
          name: options
          type: string
      returns: |-
        [
            {
               "type" : "bauxite",
               "quantity" : 10000
            },
            {
               "type" : "prisoner",
               "prisoner_id" : "id-goes-here"
            }
         ]
    get_glyphs:
      description: Returns a list of glyphs that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "glyphs" : [
                {
                    "id" : "id-goes-here",
                    "type" : "bauxite"
                },
                ...
            ],
            "cargo_space_used_each" : 100,
            "status" : { ... }
         }
    get_plans:
      description: Returns a list of plans that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "plans" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Intelligence Ministry",
                    "level" : "7",
                    "extra_build_level" : "0"        # some special plans will build a building from their level all the way to this number
                },
                ...
            ],
            "cargo_space_used_each" : 100,
            "status" : { ... }
         }
    get_prisoners:
      description: Returns a list of prisoners that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "prisoners" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Jack Bauer",
                    "level" : "5"
                },
                ...
            ],
            "cargo_space_used_each" : 350,
            "status" : { ... }
         }
    get_ships:
      description: Returns a list of ships that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Enterprise",
                    "type" : "probe",
                    "hold_size" : 0,
                    "speed" : 3900
                },
                ...
            ],
            "cargo_space_used_each" : 10000,
            "status" : { ... }
         }
    get_stored_resources:
      description: Returns a list of the resources you have stored to make it easier to identify what you want to trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "cargo_space_used_each" : 1,
            "resources" : {
                    "water" : 14000,
                    "waste" : 393,
                    "bauxite" : 47,
                    "cheese" : 1193,
                    ...
            }
         }
    get_trade_ships:
      description: Returns a list of the ships that could be used to do a trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the trade ministry.
          name: building_id
          type: string
        - description: The unique id of the body you'll be shipping to. Optional. If included it will calculate the estimated travel time of the ships to this body.
          name: target_body_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "ships" : [
                {
                   "id" : "id-goes-here",
                   "type" : "cargo_ship",
                   "name" : "SS Minnow",
                   "estimated_travel_time" : 3600, # in seconds, one way
                   ...
                },
                ...
            ]
         }
    push_items:
      description: Allows you to push items between your colonies.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: 'NOTE: The list of your planets comes back with every empire status message.'
          name: target_id
          type: string
        - description: 'An array reference of hash references of items you wish to ship to the target planet. There are five types of items that can be shipped via this mechanism. They are resources, glyphs, plans, prisoners, and ships.'
          name: items
          type: string
        - description: A hash reference of options to modify the trade.
          name: options
          type: string
      returns: |-
        [
            {
               "type" : "bauxite",
               "quantity" : 10000
            },
            {
               "type" : "prisoner",
               "prisoner_id" : "id-goes-here"
            }
         ]
    report_abuse:
      description: Report a trade that you think is abusing the trade system.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view_market:
      description: Displays a list of trades available at the present time.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: Optional. An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
        - description: 'Optional. A string which will narrow the offered trades to those who are offering a specific kind of object, such as ships. Filter options include: food ore water waste energy glyph prisoner ship plan'
          name: filter
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 21 spy named Jack Bauer (prisoner)",
                        "4,000 bauxite",
                        "gold glyph"
                    ],
                    "body" : {
                        "id" : "id-goes-here"         # use with get_trade_ships() to determine travel time
                    },
                    "empire" : {
                        "id" : "id-goes-here",
                        "name" : "Earthlings"
                    }
                },
                ...
            ],
            "trade_count" : 1047,
            "page_number" : 1,
            "status" : { ... }
         }
    view_my_market:
      description: Displays a list of trades the current user has posted.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 21 spy named Jack Bauer (prisoner)",
                        "4,000 bauxite",
                        "gold glyph"
                    ]
                },
                ...
            ],
            "trade_count" : 17,
            "page_number" : 1,
            "status" : { ... }
         }
    withdraw_from_market:
      description: Remove a trade that you have offered and collect the items up for trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
Transporter:
  services:
    accept_from_market:
      description: 'Accept a trade offer from the list of available trades. In addition to paying whatever the asking price is, the subspace transporter uses 1 essentia to complete the transaction. See view_market.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
      throws:
        - 1016
    add_to_market:
      description: 'Queues a trade for others to see. In addition to anything offered in your trade, setting up the trade will cost you 1 essentia.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the subspace transporter.
          name: building_id
          type: string
        - name: offer
        - description: An integer which represents how much essentia you are asking for in this trade. Must be between 1 and 99.
          name: ask
          type: string
      returns: |-
        [
            {
               "type" : "bauxite",
               "quantity" : 10000
            },
            {
               "type" : "prisoner",
               "prisoner_id" : "id-goes-here"
            }
         ]
    get_glyphs:
      description: Returns a list of glyphs that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "glyphs" : [
                {
                    "id" : "id-goes-here",
                    "type" : "bauxite"
                },
                ...
            ],
            "cargo_space_used_each" : 100,
            "status" : { ... }
         }
    get_plans:
      description: Returns a list of plans that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "plans" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Intelligence Ministry",
                    "level" : "7",
                    "extra_build_level" : "0"        # some special plans will build a building from their level all the way to this number
                },
                ...
            ],
            "cargo_space_used_each" : 100,
            "status" : { ... }
         }
    get_prisoners:
      description: Returns a list of prisoners that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "prisoners" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Jack Bauer",
                    "level" : "5"
                },
                ...
            ],
            "cargo_space_used_each" : 350,
            "status" : { ... }
         }
    get_ships:
      description: Returns a list of ships that may be traded. Used with the add_trade method.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "ships" : [
                {
                    "id" : "id-goes-here",
                    "name" : "Enterprise",
                    "type" : "probe",
                    "hold_size" : 0,
                    "speed" : 3900
                },
                ...
            ],
            "cargo_space_used_each" : 10000,
            "status" : { ... }
         }
    get_stored_resources:
      description: Returns a list of the resources you have stored to make it easier to identify what you want to trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
      returns: |-
        {
            "status" : { ... },
            "cargo_space_used_each" : 100,
            "resources" : {
                    "water" : 14000,
                    "waste" : 393,
                    "bauxite" : 47,
                    "cheese" : 1193,
                    ...
            }
         }
    push_items:
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: 'NOTE: The list of your planets comes back with every empire status message.'
          name: target_id
          type: string
        - description: 'An array reference of hash references of items you wish to ship to the target planet. There are five types of items that can be shipped via this mechanism. They are resources, glyphs, plans, prisoners, and ships.'
          name: items
          type: string
      returns: |-
        [
            {
               "type" : "bauxite",
               "quantity" : 10000
            },
            {
               "type" : "prisoner",
               "prisoner_id" : "id-goes-here"
            }
         ]
    report_abuse:
      description: Report a trade that you think is abusing the trade system.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    trade_one_for_one:
      description: Lacuna Expanse Corp will do one for one trades of any resource in exchange for 3 essentia.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The name of the resource you have. See get_stored_resources to see what you have.
          name: have
          type: string
        - description: The name of any resource you want.
          name: want
          type: string
        - description: The amount of resources that will be traded one for one.
          name: quantity
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
    view:
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
           "building" : { ... },
           "status" : { ... },
           "transport" : {
             "max" : 2500
           }
         }
    view_market:
      description: Displays a list of trades available at the present time.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: Optional. An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
        - description: 'Optional. A string which will narrow the offered trades to those who are offering a specific kind of object, such as ships. Filter options include: food ore water waste energy glyph prisoner ship plan'
          name: filter
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 21 spy named Jack Bauer (prisoner)",
                        "4,000 bauxite",
                        "gold glyph"
                    ],
                    "empire" : {
                        "id" : "id-goes-here",
                        "name" : "Earthlings"
                    }
                },
                ...
            ],
            "trade_count" : 1047,
            "page_number" : 1,
            "status" : { ... }
         }
    view_my_market:
      description: Displays a list of trades the current user has posted.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: An integer representing the page of trades (25 per page) to return. Defaults to 1.
          name: page_number
          type: string
      returns: |-
        {
            "trades" : [
                {
                    "date_offered" : "01 31 2010 13:09:05 +0600",
                    "id" : "id-goes-here",
                    "ask" : 25,     # essentia
                    "offer" : [
                        "Level 21 spy named Jack Bauer (prisoner)",
                        "4,000 bauxite",
                        "gold glyph"
                    ]
                },
                ...
            ],
            "trade_count" : 17,
            "page_number" : 1,
            "status" : { ... }
         }
    withdraw_from_market:
      description: Remove a trade that you have offered and collect the items up for trade.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of this building.
          name: building_id
          type: string
        - description: The unique id of the trade.
          name: trade_id
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
WasteRecycling:
  description: The Waste Recycling Center can be used to convert waste in storage into usable resources.
  services:
    recycle:
      description: 'Converts waste into water, ore, and energy. You can choose which amounts of each you want, so long as their total does not go over the amount of waste you have on hand. For each unit of waste converted, the recycling center will take 10 seconds to complete the recycling process. However, the amount of time is reduced a bit by the level of the Recycling Center. Returns view.'
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the Waste Recycling Center.
          name: building_id
          type: string
        - description: An integer representing the amount of water you want.
          name: water
          type: string
        - description: An integer representing the amount of ore you want.
          name: ore
          type: string
        - description: An integer representing the amount of energy you want.
          name: energy
          type: string
        - name: use_essentia
      throws:
        - 1010
        - 1011
    subsidize_recycling:
      description: Will spend 2 essentia to complete the current recycling job immediately. Returns view.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the waste recycling building.
          name: building_id
          type: string
      throws:
        - 1011
    view:
      parameters:
        - name: session_id
        - name: building_id
      returns: |-
        {
            "status" : { ... },
            "building" : { ... },
            "recycle" : {
                "seconds_remaining" : 0,
                "can" : 1,
                "seconds_per_resource" : "2.138", # to precalculate the time recycling will take
                "max_recycle" : 12000,
                "water" : 0,
                "energy" : 0,
                "ore" : 0
            }
         }
WaterStorage:
  description: Water Storage Tanks increase the amount of water you can store on your planet.
  services:
    dump:
      description: Converts water into waste.
      parameters:
        - description: A session id.
          name: session_id
          type: string
        - description: The unique id of the building.
          name: building_id
          type: string
        - description: An integer representing the amount to dump.
          name: amount
          type: string
      returns: "{\n    \"status\" : { ... }\n }"
common:
  build:
    description: Adds this building to the planet's build queue.
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - name: body_id
      - description: The x axis of the area on the planet you wish to place the building. Valid values are between -5 and 5 inclusive.
        name: x
        type: string
      - description: The y axis of the area on the planet you wish to place the building. Valid values are between -5 and 5 inclusive.
        name: y
        type: string
    returns: |-
      {
          "building" : {
              "id" : "id-goes-here",
              "pending_build" : {
                  "seconds_remaining" : 430,
                  "start" : "01 31 2010 13:09:05 +0600",
                  "end" : "01 31 2010 18:09:05 +0600"
              },
              "level" : 0,
          "status" : { ... }
       }
    throws:
      - 1002
      - 1010
      - 1011
      - 1012
      - 1013
  demolish:
    description: "Allows you to instantly destroy a building.SPECIAL EXCEPTION: If the user downgrades a level 1 building, then the Client needs to eliminate that object from the user's view. This method will return the view of the level 1 building, because that's it's intended course of action, but the client needs to handle this gracefully for the user.The unique id of the building."
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - name: building_id
    returns: "{\n    \"status\" : { ... }\n }"
    throws:
      - 1012
  downgrade:
    description: Downgrades a building by one level and then returns view.The unique id of the building.
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - name: building_id
    throws:
      - 1012
  get_stats_for_level:
    description: 'This method is for power users and script writers. It will return the projected stats of a building at a certain level. The building must already exist on the planet, because where it exists and who it is owned by affects the stats of the building.'
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - description: The unique id of the building you want to get the stats for.
        name: building_id
        type: string
      - description: An integer between 1 and 100. This represents the stats that you want to see for the building.
        name: level
        type: string
    returns: |-
      {
          "building" : {
              "id" : "id-goes-here",
              "name" : "Planetary Command",
              "image" : "command6",
              "level" : 6,
              "food_hour" : 500,
              "food_capacity" : 500,
              "energy_hour" : -44,
              "energy_capacity" : 500,
              "ore_hour" : -310,
              "ore_capacity" : 500,
              "water_hour" : -100,
              "water_capacity" : 500,
              "waste_hour" : 33,
              "waste_capacity" : 500,
              "happiness_hour" : 0,
              "upgrade" : {
                  "cost" : {
                      "food" : 500,
                      "water" : 500,
                      "energy" : 500,
                      "waste" : 500,
                      "ore" : 1000,
                      "time" : 1200,
                  },
                  "production" : {
                      "food_hour" : 1500,
                      "food_capacity" : 500,
                      "energy_hour" : -144,
                      "energy_capacity" : 500,
                      "ore_hour" : -1310,
                      "ore_capacity" : 500,
                      "water_hour" : -1100,
                      "water_capacity" : 500,
                      "waste_hour" : 133,
                      "waste_capacity" : 500,
                      "happiness_hour" : 0,
                  },
                  "image" : "command7"
          },
          "status" : { ... }
       }
    throws:
      - 1009
  repair:
    description: Restores a building's efficiency to 100%. See the repair_costs section of the view method to see how many resources will be spent in this process. Returns view.
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - description: The unique id of the building.
        name: building_id
        type: string
  upgrade:
    description: Adds the requested upgrade to the build queue.
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - description: The id of the building you wish to retrieve.
        name: building_id
        type: string
    returns: |-
      {
          "building" : {
              "id" : "id-goes-here",
              "pending_build" : {
                  "seconds_remaining" : 430,
                  "start" : "01 31 2010 13:09:05 +0600",
                  "end" : "01 31 2010 18:09:05 +0600"
              },
              "level" : 1,
          "status" : { ... }
       }
    throws:
      - 1002
      - 1010
      - 1011
      - 1012
      - 1013
  view:
    description: Retrieves the properties of the building.
    parameters:
      - description: A session id.
        name: session_id
        type: string
      - description: The id of the building you wish to retrieve.
        name: building_id
        type: string
    returns: |-
      {
          "building" : {
              "id" : "id-goes-here",
              "name" : "Planetary Command",
              "image" : "command6",
              "level" : 6,
              "x" : 0,
              "y", 0,
              "food_hour" : 500,
              "food_capacity" : 500,
              "energy_hour" : -44,
              "energy_capacity" : 500,
              "ore_hour" : -310,
              "ore_capacity" : 500,
              "water_hour" : -100,
              "water_capacity" : 500,
              "waste_hour" : 33,
              "waste_capacity" : 500,
              "happiness_hour" : 0,
              "efficiency" : 100,
              "repair_costs" : {
                  "food" : 0,
                  "water" : 0,
                  "energy" : 0,
                  "ore" : 0
              },
              "pending_build" : {                            # only included when building is building/upgrading
                  "seconds_remaining" : 430,
                  "start" : "01 31 2010 13:09:05 +0600",
                  "end" : "01 31 2010 18:09:05 +0600"
              },
              "work" : {                                     # only included when building is working (Parks, Waste Recycling, etc)
                  "seconds_remaining" : 49,
                  "start" : "01 31 2010 13:09:05 +0600",
                  "end" : "01 31 2010 18:09:05 +0600"
              },
              "upgrade" : {
                  "can" : 0,
                  "reason" : [1011, "Note enough resources.", "food"],
                  "cost" : {
                      "food" : 500,
                      "water" : 500,
                      "energy" : 500,
                      "waste" : 500,
                      "ore" : 1000,
                      "time" : 1200,
                  },
                  "production" : {
                      "food_hour" : 1500,
                      "food_capacity" : 500,
                      "energy_hour" : -144,
                      "energy_capacity" : 500,
                      "ore_hour" : -1310,
                      "ore_capacity" : 500,
                      "water_hour" : -1100,
                      "water_capacity" : 500,
                      "waste_hour" : 133,
                      "waste_capacity" : 500,
                      "happiness_hour" : 0,
                  },
                  "image" : "command7"
          },
          "status" : { ... }
       }
    throws:
      - 1002
      - 1010
simple:
  - Algae
  - AlgaePond
  - AmalgusMeadow
  - Apple
  - AtmosphericEvaporator
  - Beach
  - Bean
  - Beeldeban
  - BeeldebanNest
  - BlackHoleGenerator
  - Bread
  - Burger
  - Cheese
  - Chip
  - Cider
  - CitadelOfKnope
  - CloakingLab
  - Corn
  - CornMeal
  - CrashedShipSite
  - Crater
  - Dairy
  - Denton
  - DentonBrambles
  - DeployedBleeder
  - Espionage
  - EssentiaVein
  - Fission
  - Fusion
  - GasGiantLab
  - GasGiantPlatform
  - Geo
  - GeoThermalVent
  - GratchsGauntlet
  - GreatBallOfJunk
  - Grove
  - Hydrocarbon
  - InterDimensionalRift
  - JunkHengeSculpture
  - KalavianRuins
  - KasternsKeep
  - Lagoon
  - Lake
  - Lapis
  - LapisForest
  - LostCityOfTyleon
  - LuxuryHousing
  - Malcud
  - MalcudField
  - MassadsHenge
  - MetalJunkArches
  - Mine
  - MunitionsLab
  - NaturalSpring
  - OreRefinery
  - Oversight
  - Pancake
  - PantheonOfHagness
  - Pie
  - PilotTraining
  - Potato
  - Propulsion
  - PyramidJunkSculpture
  - Ravine
  - RockyOutcrop
  - SAW
  - Sand
  - Shake
  - Singularity
  - Soup
  - SpaceJunkPark
  - Stockpile
  - SupplyPod
  - Syrup
  - TerraformingLab
  - TerraformingPlatform
  - TheDillonForge
  - University
  - Volcano
  - WasteDigester
  - WasteEnergy
  - WasteSequestration
  - WasteTreatment
  - WaterProduction
  - WaterPurification
  - WaterReclamation
  - Wheat
